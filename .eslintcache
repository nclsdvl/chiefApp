[{"C:\\Users\\MonOrdiPro\\Desktop\\chiefApp\\chief_app\\src\\index.js":"1","C:\\Users\\MonOrdiPro\\Desktop\\chiefApp\\chief_app\\src\\components\\weekMenu.js":"2","C:\\Users\\MonOrdiPro\\Desktop\\chiefApp\\chief_app\\src\\App.js":"3","C:\\Users\\MonOrdiPro\\Desktop\\chiefApp\\chief_app\\src\\components\\WeekMenu.js":"4","C:\\Users\\MonOrdiPro\\Desktop\\chiefApp\\chief_app\\src\\components\\DailyMenu.js":"5"},{"size":500,"mtime":1606206021338,"results":"6","hashOfConfig":"7"},{"size":681,"mtime":1606278484566,"results":"8","hashOfConfig":"7"},{"size":209,"mtime":1606278492316,"results":"9","hashOfConfig":"7"},{"size":1214,"mtime":1606288119647,"results":"10","hashOfConfig":"7"},{"size":1938,"mtime":1606288265404,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6yshn7",{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\MonOrdiPro\\Desktop\\chiefApp\\chief_app\\src\\index.js",[],"C:\\Users\\MonOrdiPro\\Desktop\\chiefApp\\chief_app\\src\\components\\weekMenu.js",["23","24"],"C:\\Users\\MonOrdiPro\\Desktop\\chiefApp\\chief_app\\src\\App.js",["25"],"C:\\Users\\MonOrdiPro\\Desktop\\chiefApp\\chief_app\\src\\components\\WeekMenu.js",["26","27","28"],"import React, { useState, useEffect } from 'react'\r\nimport DailyMenu from './DailyMenu'\r\nimport axios from 'axios'\r\n\r\nasync function getMenu(codes) {\r\n    let test = [];\r\n    let menus =  codes.map((code) => {  \r\n        axios.get(`https://world.openfoodfacts.org/api/v0/product/${code}.json`) \r\n        .then((response) => { \r\n            test.push([response.data.product.product_name,  response.data.product.image_front_small_url])\r\n            return test\r\n       })\r\n    })\r\n    return test\r\n}\r\n\r\nfunction WeekMenu() {\r\n    const dates= ['lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi', 'dimanche']\r\n    const [menu, setMenu] = useState([])\r\n\r\n    useEffect(async () => {\r\n        const codes = ['3454681006511', '737628064502', '3250392392277', '3700009252567', '3564707109888',  '8411555100404',  '5449000000996']\r\n        setMenu(await getMenu(codes))\r\n        }, [])\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        { dates.map((day, index) => {\r\n            console.log(index)\r\n            console.log(menu[index])\r\n            return <DailyMenu day = {day} key={day} menu={menu} index={index} ></DailyMenu>\r\n            })\r\n        }  \r\n\r\n\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default WeekMenu;","C:\\Users\\MonOrdiPro\\Desktop\\chiefApp\\chief_app\\src\\components\\DailyMenu.js",["29","30","31"],{"ruleId":"32","severity":1,"message":"33","line":6,"column":12,"nodeType":"34","messageId":"35","endLine":6,"endColumn":16},{"ruleId":"36","severity":1,"message":"37","line":9,"column":37,"nodeType":"38","messageId":"39","endLine":9,"endColumn":39},{"ruleId":"32","severity":1,"message":"40","line":1,"column":8,"nodeType":"34","messageId":"35","endLine":1,"endColumn":12},{"ruleId":"32","severity":1,"message":"41","line":7,"column":9,"nodeType":"34","messageId":"35","endLine":7,"endColumn":14},{"ruleId":"36","severity":1,"message":"37","line":7,"column":35,"nodeType":"38","messageId":"39","endLine":7,"endColumn":37},{"ruleId":"42","severity":1,"message":"43","line":21,"column":15,"nodeType":"38","endLine":24,"endColumn":10},{"ruleId":"32","severity":1,"message":"44","line":1,"column":27,"nodeType":"34","messageId":"35","endLine":1,"endColumn":36},{"ruleId":"32","severity":1,"message":"33","line":46,"column":10,"nodeType":"34","messageId":"35","endLine":46,"endColumn":14},{"ruleId":"32","severity":1,"message":"45","line":46,"column":16,"nodeType":"34","messageId":"35","endLine":46,"endColumn":23},"no-unused-vars","'menu' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'logo' is defined but never used.","'menus' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","'useEffect' is defined but never used.","'setMenu' is assigned a value but never used."]